// <auto-generated />
using System;
using ArcheryMAS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArcheryMAS.Migrations
{
    [DbContext(typeof(ArcheryDbContext))]
    [Migration("20240616135044_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ArcheryMAS.Migrations.Archer", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("LeaveReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Archer");

                    b.HasData(
                        new
                        {
                            Person_PESEL = "57142828802",
                            Rank = "Senior"
                        },
                        new
                        {
                            Person_PESEL = "93561746921",
                            Rank = "Senior"
                        },
                        new
                        {
                            Person_PESEL = "64825217142",
                            Rank = "Senior"
                        },
                        new
                        {
                            Person_PESEL = "54189115075",
                            Rank = "Cadet"
                        },
                        new
                        {
                            Person_PESEL = "37518065575",
                            Rank = "Cadet"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArcherInCompetition", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Competition_Name")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PlaceInCompetition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Archer_Person_PESEL", "Competition_Name");

                    b.HasIndex("Competition_Name");

                    b.ToTable("ArcherInCompetition");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSet", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ArrowLength")
                        .HasColumnType("double");

                    b.Property<int>("ArrowQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ArrowSet");

                    b.HasData(
                        new
                        {
                            ID = 49,
                            ArrowLength = 25.770569940518886,
                            ArrowQuantity = 10,
                            MinQuantity = 0,
                            State = "Used"
                        },
                        new
                        {
                            ID = 50,
                            ArrowLength = 32.403426950373408,
                            ArrowQuantity = 12,
                            MinQuantity = 0,
                            State = "Used"
                        },
                        new
                        {
                            ID = 51,
                            ArrowLength = 36.443976347797872,
                            ArrowQuantity = 6,
                            MinQuantity = 0,
                            State = "Broken"
                        },
                        new
                        {
                            ID = 52,
                            ArrowLength = 29.484368140173178,
                            ArrowQuantity = 9,
                            MinQuantity = 0,
                            State = "Used"
                        },
                        new
                        {
                            ID = 53,
                            ArrowLength = 28.383548101396009,
                            ArrowQuantity = 12,
                            MinQuantity = 0,
                            State = "Used"
                        },
                        new
                        {
                            ID = 54,
                            ArrowLength = 25.391569572005473,
                            ArrowQuantity = 11,
                            MinQuantity = 0,
                            State = "New"
                        },
                        new
                        {
                            ID = 55,
                            ArrowLength = 36.933432522880821,
                            ArrowQuantity = 12,
                            MinQuantity = 0,
                            State = "New"
                        },
                        new
                        {
                            ID = 56,
                            ArrowLength = 21.429721027789665,
                            ArrowQuantity = 9,
                            MinQuantity = 0,
                            State = "Used"
                        },
                        new
                        {
                            ID = 57,
                            ArrowLength = 28.381131793487242,
                            ArrowQuantity = 11,
                            MinQuantity = 0,
                            State = "Broken"
                        },
                        new
                        {
                            ID = 58,
                            ArrowLength = 21.783747084201067,
                            ArrowQuantity = 7,
                            MinQuantity = 0,
                            State = "Used"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetIndoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.Property<double>("MaxDiameter")
                        .HasColumnType("double");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetIndoor");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetOutdoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("MaxDiameter")
                        .HasColumnType("double");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetOutdoor");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetTraining", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetTraining");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Bow", b =>
                {
                    b.Property<string>("NickName")
                        .HasColumnType("varchar(30)");

                    b.Property<double>("Force")
                        .HasColumnType("double");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NickName");

                    b.ToTable("Bow");

                    b.HasData(
                        new
                        {
                            NickName = "Beazle",
                            Force = 22.329537785205343,
                            Manufacturer = "Hoyt"
                        },
                        new
                        {
                            NickName = "Nash",
                            Force = 84.536029973913429,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Knox",
                            Force = 65.653969542969435,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Kip",
                            Force = 90.298225561568827,
                            Manufacturer = "Hoyt"
                        },
                        new
                        {
                            NickName = "Huss",
                            Force = 46.576629295800664,
                            Manufacturer = "PSE"
                        },
                        new
                        {
                            NickName = "JB",
                            Force = 41.695826311957589,
                            Manufacturer = "PSE"
                        },
                        new
                        {
                            NickName = "Nino",
                            Force = 86.537812200828597,
                            Manufacturer = "Mathews"
                        },
                        new
                        {
                            NickName = "Moby",
                            Force = 74.455087576575352,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Kyan",
                            Force = 19.017152408969473,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Koda",
                            Force = 19.670049777424264,
                            Manufacturer = "Easton"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Coach", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bonus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinSalary")
                        .HasColumnType("INTEGER");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Coach");

                    b.HasData(
                        new
                        {
                            Person_PESEL = "18011427290",
                            Bonus = 214,
                            MinSalary = 0
                        },
                        new
                        {
                            Person_PESEL = "89898178918",
                            Bonus = 815,
                            MinSalary = 0
                        },
                        new
                        {
                            Person_PESEL = "11611011204",
                            Bonus = 215,
                            MinSalary = 0
                        },
                        new
                        {
                            Person_PESEL = "17926523342",
                            Bonus = 993,
                            MinSalary = 0
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Competition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CancelingReason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeStart")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.CompoundBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("varchar(30)");

                    b.Property<double>("OpticalZoom")
                        .HasColumnType("double");

                    b.HasKey("Bow_NickName");

                    b.ToTable("CompoundBow");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.OlympicBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("DaysWithoutService")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxDaysWithoutService")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NummberOfStabilizers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Bow_NickName");

                    b.ToTable("OlympicBow");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Person", b =>
                {
                    b.Property<string>("PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bow_NickName")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PESEL");

                    b.HasIndex("ArrowSet_ID");

                    b.HasIndex("Bow_NickName");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PESEL = "54189115075",
                            ArrowSet_ID = 51,
                            Bow_NickName = "JB",
                            DateOfBirth = new DateTime(1979, 1, 25, 20, 41, 34, 354, DateTimeKind.Local).AddTicks(8798),
                            Names = "Florian, Kwintyn",
                            Surname = "Matusiak"
                        },
                        new
                        {
                            PESEL = "37518065575",
                            ArrowSet_ID = 52,
                            Bow_NickName = "Kyan",
                            DateOfBirth = new DateTime(1957, 5, 21, 9, 59, 44, 197, DateTimeKind.Local).AddTicks(7783),
                            Names = "Eleonora, Henryk",
                            Surname = "Książek"
                        },
                        new
                        {
                            PESEL = "57142828802",
                            ArrowSet_ID = 50,
                            Bow_NickName = "Kip",
                            DateOfBirth = new DateTime(1994, 5, 15, 23, 9, 29, 303, DateTimeKind.Local).AddTicks(6789),
                            Names = "Ksawera, Sabina",
                            Surname = "Frączek"
                        },
                        new
                        {
                            PESEL = "89898178918",
                            ArrowSet_ID = 58,
                            Bow_NickName = "Nash",
                            DateOfBirth = new DateTime(1974, 6, 4, 21, 57, 2, 884, DateTimeKind.Local).AddTicks(4433),
                            Names = "Rebeka, Edyta",
                            Surname = "Piórkowski"
                        },
                        new
                        {
                            PESEL = "07121132797",
                            ArrowSet_ID = 49,
                            Bow_NickName = "Nino",
                            DateOfBirth = new DateTime(1991, 1, 12, 0, 7, 20, 900, DateTimeKind.Local).AddTicks(8017),
                            Names = "Justyn, Małgorzata",
                            Surname = "Drabik"
                        },
                        new
                        {
                            PESEL = "17926523342",
                            ArrowSet_ID = 53,
                            Bow_NickName = "Beazle",
                            DateOfBirth = new DateTime(1995, 8, 9, 17, 50, 33, 857, DateTimeKind.Local).AddTicks(751),
                            Names = "Platon, Aleksander",
                            Surname = "Godlewski"
                        },
                        new
                        {
                            PESEL = "64825217142",
                            ArrowSet_ID = 56,
                            Bow_NickName = "Moby",
                            DateOfBirth = new DateTime(2004, 4, 4, 3, 54, 16, 670, DateTimeKind.Local).AddTicks(4691),
                            Names = "Maryna, Pankracy",
                            Surname = "Jankowski"
                        },
                        new
                        {
                            PESEL = "11611011204",
                            ArrowSet_ID = 55,
                            Bow_NickName = "Huss",
                            DateOfBirth = new DateTime(1976, 10, 23, 18, 3, 36, 412, DateTimeKind.Local).AddTicks(9909),
                            Names = "Franciszka, Juliusz",
                            Surname = "Wawrzyniak"
                        },
                        new
                        {
                            PESEL = "93561746921",
                            ArrowSet_ID = 54,
                            Bow_NickName = "Koda",
                            DateOfBirth = new DateTime(1960, 3, 13, 1, 24, 15, 364, DateTimeKind.Local).AddTicks(7173),
                            Names = "Baldwin, Edward",
                            Surname = "Andrzejewski"
                        },
                        new
                        {
                            PESEL = "18011427290",
                            ArrowSet_ID = 57,
                            Bow_NickName = "Knox",
                            DateOfBirth = new DateTime(1975, 8, 7, 20, 57, 58, 763, DateTimeKind.Local).AddTicks(3720),
                            Names = "Lucjan, Ksenofont",
                            Surname = "Wawrzyniak"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.President", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("DegreeOfEducation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("President");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Training", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Coach_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeTrainingEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeTrainingStart")
                        .HasColumnType("datetime");

                    b.HasKey("Archer_Person_PESEL", "Coach_Person_PESEL");

                    b.HasIndex("Coach_Person_PESEL");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.UniversalSet", b =>
                {
                    b.Property<int>("ArrowSetIndoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetOutdoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetTraining_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("ArrowSetIndoor_ArrowSet_ID", "ArrowSetOutdoor_ArrowSet_ID", "ArrowSetTraining_ArrowSet_ID");

                    b.HasIndex("ArrowSetOutdoor_ArrowSet_ID");

                    b.HasIndex("ArrowSetTraining_ArrowSet_ID");

                    b.ToTable("UniversalSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Archer", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Person", "Person_PESELNavigation")
                        .WithOne("Archer")
                        .HasForeignKey("ArcheryMAS.Migrations.Archer", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArcherInCompetition", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.Competition", "Competition_NameNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Competition_Name")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Competition_NameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetIndoor", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetIndoor")
                        .HasForeignKey("ArcheryMAS.Migrations.ArrowSetIndoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetOutdoor", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetOutdoor")
                        .HasForeignKey("ArcheryMAS.Migrations.ArrowSetOutdoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetTraining", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetTraining")
                        .HasForeignKey("ArcheryMAS.Migrations.ArrowSetTraining", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Coach", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Person", "Person_PESELNavigation")
                        .WithOne("Coach")
                        .HasForeignKey("ArcheryMAS.Migrations.Coach", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.CompoundBow", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Bow", "Bow_NickNameNavigation")
                        .WithOne("CompoundBow")
                        .HasForeignKey("ArcheryMAS.Migrations.CompoundBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.OlympicBow", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Bow", "Bow_NickNameNavigation")
                        .WithOne("OlympicBow")
                        .HasForeignKey("ArcheryMAS.Migrations.OlympicBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Person", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSet", "ArrowSet")
                        .WithMany("People")
                        .HasForeignKey("ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.Bow", "Bow_NickNameNavigation")
                        .WithMany("People")
                        .HasForeignKey("Bow_NickName")
                        .IsRequired();

                    b.Navigation("ArrowSet");

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.President", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Person", "Person_PESELNavigation")
                        .WithOne("President")
                        .HasForeignKey("ArcheryMAS.Migrations.President", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Training", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.Coach", "Coach_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Coach_Person_PESEL")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Coach_Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.UniversalSet", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSetIndoor", "ArrowSetIndoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetIndoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.ArrowSetOutdoor", "ArrowSetOutdoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetOutdoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.ArrowSetTraining", "ArrowSetTraining_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetTraining_ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSetIndoor_ArrowSet");

                    b.Navigation("ArrowSetOutdoor_ArrowSet");

                    b.Navigation("ArrowSetTraining_ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Archer", b =>
                {
                    b.Navigation("ArcherInCompetitions");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSet", b =>
                {
                    b.Navigation("ArrowSetIndoor");

                    b.Navigation("ArrowSetOutdoor");

                    b.Navigation("ArrowSetTraining");

                    b.Navigation("People");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetIndoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetOutdoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetTraining", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Bow", b =>
                {
                    b.Navigation("CompoundBow");

                    b.Navigation("OlympicBow");

                    b.Navigation("People");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Coach", b =>
                {
                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Competition", b =>
                {
                    b.Navigation("ArcherInCompetitions");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Person", b =>
                {
                    b.Navigation("Archer");

                    b.Navigation("Coach");

                    b.Navigation("President");
                });
#pragma warning restore 612, 618
        }
    }
}
