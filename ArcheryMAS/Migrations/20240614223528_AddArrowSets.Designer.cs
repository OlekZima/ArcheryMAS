// <auto-generated />
using System;
using ArcheryMAS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArcheryMAS.Migrations
{
    [DbContext(typeof(ArcheryDbContext))]
    [Migration("20240614223528_AddArrowSets")]
    partial class AddArrowSets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("LeaveReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Archer");

                    b.HasData(
                        new
                        {
                            Person_PESEL = "26676578951",
                            Rank = "Cadet"
                        },
                        new
                        {
                            Person_PESEL = "13862601160",
                            Rank = "Junior"
                        },
                        new
                        {
                            Person_PESEL = "14984350782",
                            Rank = "Junior"
                        },
                        new
                        {
                            Person_PESEL = "67514893904",
                            Rank = "Senior"
                        },
                        new
                        {
                            Person_PESEL = "07523261586",
                            Rank = "Junior"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArcherInCompetition", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Competition_Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlaceInCompetition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Archer_Person_PESEL", "Competition_Name");

                    b.HasIndex("Competition_Name");

                    b.ToTable("ArcherInCompetition");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ArrowLength")
                        .HasColumnType("double");

                    b.Property<int>("ArrowQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Person_PESEL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Person_PESEL");

                    b.ToTable("ArrowSet");

                    b.HasData(
                        new
                        {
                            ID = 54,
                            ArrowLength = 0.0,
                            ArrowQuantity = 0,
                            Person_PESEL = "67514893904",
                            State = "New"
                        },
                        new
                        {
                            ID = 74,
                            ArrowLength = 0.0,
                            ArrowQuantity = 0,
                            Person_PESEL = "26676578951",
                            State = "Broken"
                        },
                        new
                        {
                            ID = 71,
                            ArrowLength = 0.0,
                            ArrowQuantity = 0,
                            Person_PESEL = "07523261586",
                            State = "Broken"
                        },
                        new
                        {
                            ID = 42,
                            ArrowLength = 0.0,
                            ArrowQuantity = 0,
                            Person_PESEL = "13862601160",
                            State = "Broken"
                        },
                        new
                        {
                            ID = 37,
                            ArrowLength = 0.0,
                            ArrowQuantity = 0,
                            Person_PESEL = "14984350782",
                            State = "Broken"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetIndoor");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetOutdoor");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetTraining");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Bow", b =>
                {
                    b.Property<string>("NickName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Force")
                        .HasColumnType("double");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NickName");

                    b.ToTable("Bow");

                    b.HasData(
                        new
                        {
                            NickName = "Jinx",
                            Force = 26.0,
                            Manufacturer = "Hoyt"
                        },
                        new
                        {
                            NickName = "Kruz",
                            Force = 35.0,
                            Manufacturer = "Hoyt"
                        },
                        new
                        {
                            NickName = "Barron",
                            Force = 43.0,
                            Manufacturer = "Hoyt"
                        },
                        new
                        {
                            NickName = "Mars",
                            Force = 86.0,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Kai",
                            Force = 39.0,
                            Manufacturer = "Bear"
                        },
                        new
                        {
                            NickName = "Kip",
                            Force = 27.0,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Bam",
                            Force = 76.0,
                            Manufacturer = "Hoyt"
                        },
                        new
                        {
                            NickName = "Moby",
                            Force = 47.0,
                            Manufacturer = "Hoyt"
                        },
                        new
                        {
                            NickName = "Moe",
                            Force = 66.0,
                            Manufacturer = "Mathews"
                        },
                        new
                        {
                            NickName = "Jax",
                            Force = 99.0,
                            Manufacturer = "Hoyt"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bonus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Competition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("CancelingReason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeStart")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.CompoundBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("TEXT");

                    b.Property<double>("OpticalZoom")
                        .HasColumnType("double");

                    b.HasKey("Bow_NickName");

                    b.ToTable("CompoundBow");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.OlympicBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("TEXT");

                    b.Property<int>("DaysWithoutService")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NummberOfStabilizers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Bow_NickName");

                    b.ToTable("OlympicBow");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.Property<string>("PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bow_NickName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PESEL");

                    b.HasIndex("Bow_NickName");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PESEL = "26676578951",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Barron",
                            DateOfBirth = new DateTime(2012, 12, 16, 21, 20, 47, 89, DateTimeKind.Local).AddTicks(6320),
                            Names = "Lilia, Emil",
                            Surname = "Mróz"
                        },
                        new
                        {
                            PESEL = "67514893904",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Kruz",
                            DateOfBirth = new DateTime(2023, 2, 5, 6, 8, 7, 166, DateTimeKind.Local).AddTicks(6141),
                            Names = "Aida, Żaneta",
                            Surname = "Kurek"
                        },
                        new
                        {
                            PESEL = "14984350782",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Kip",
                            DateOfBirth = new DateTime(2015, 12, 30, 8, 8, 33, 958, DateTimeKind.Local).AddTicks(752),
                            Names = "Jakubina, Hubert",
                            Surname = "Krukowski"
                        },
                        new
                        {
                            PESEL = "07523261586",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Jinx",
                            DateOfBirth = new DateTime(2007, 3, 23, 12, 43, 15, 64, DateTimeKind.Local).AddTicks(7797),
                            Names = "Natalia, Tekla",
                            Surname = "Borkowski"
                        },
                        new
                        {
                            PESEL = "13862601160",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Kai",
                            DateOfBirth = new DateTime(2009, 11, 18, 4, 59, 20, 450, DateTimeKind.Local).AddTicks(7696),
                            Names = "Nadzieja, Lucjan",
                            Surname = "Augustyniak"
                        },
                        new
                        {
                            PESEL = "01159055248",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Moby",
                            DateOfBirth = new DateTime(2021, 10, 11, 9, 7, 35, 769, DateTimeKind.Local).AddTicks(2118),
                            Names = "Konstanty, Ewa",
                            Surname = "Wąsowski"
                        },
                        new
                        {
                            PESEL = "17817556077",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Bam",
                            DateOfBirth = new DateTime(2006, 9, 20, 22, 34, 6, 660, DateTimeKind.Local).AddTicks(8707),
                            Names = "Gedeon, Matylda",
                            Surname = "Stawicki"
                        },
                        new
                        {
                            PESEL = "72000074957",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Mars",
                            DateOfBirth = new DateTime(2009, 12, 8, 15, 59, 12, 820, DateTimeKind.Local).AddTicks(4596),
                            Names = "Benedykt, Józef",
                            Surname = "Palacz"
                        },
                        new
                        {
                            PESEL = "18540233708",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Moe",
                            DateOfBirth = new DateTime(2024, 6, 4, 21, 29, 35, 429, DateTimeKind.Local).AddTicks(4567),
                            Names = "Bibiana, Dina",
                            Surname = "Szulc"
                        },
                        new
                        {
                            PESEL = "48704357137",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Jax",
                            DateOfBirth = new DateTime(2015, 12, 25, 19, 33, 51, 651, DateTimeKind.Local).AddTicks(7020),
                            Names = "Eliasz, Artur",
                            Surname = "Cieślik"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.President", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("DegreeOfEducation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("President");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Training", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Coach_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeTrainingEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeTrainingStart")
                        .HasColumnType("datetime");

                    b.HasKey("Archer_Person_PESEL", "Coach_Person_PESEL");

                    b.HasIndex("Coach_Person_PESEL");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.UniversalSet", b =>
                {
                    b.Property<int>("ArrowSetIndoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetOutdoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetTraining_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("ArrowSetIndoor_ArrowSet_ID", "ArrowSetOutdoor_ArrowSet_ID", "ArrowSetTraining_ArrowSet_ID");

                    b.HasIndex("ArrowSetOutdoor_ArrowSet_ID");

                    b.HasIndex("ArrowSetTraining_ArrowSet_ID");

                    b.ToTable("UniversalSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("Archer")
                        .HasForeignKey("ArcheryMAS.Entities.Archer", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArcherInCompetition", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.Competition", "Competition_NameNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Competition_Name")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Competition_NameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithMany("ArrowSets")
                        .HasForeignKey("Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetIndoor")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetIndoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetOutdoor")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetOutdoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetTraining")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetTraining", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("Coach")
                        .HasForeignKey("ArcheryMAS.Entities.Coach", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.CompoundBow", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithOne("CompoundBow")
                        .HasForeignKey("ArcheryMAS.Entities.CompoundBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.OlympicBow", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithOne("OlympicBow")
                        .HasForeignKey("ArcheryMAS.Entities.OlympicBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithMany("People")
                        .HasForeignKey("Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.President", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("President")
                        .HasForeignKey("ArcheryMAS.Entities.President", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Training", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.Coach", "Coach_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Coach_Person_PESEL")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Coach_Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.UniversalSet", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSetIndoor", "ArrowSetIndoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetIndoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.ArrowSetOutdoor", "ArrowSetOutdoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetOutdoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.ArrowSetTraining", "ArrowSetTraining_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetTraining_ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSetIndoor_ArrowSet");

                    b.Navigation("ArrowSetOutdoor_ArrowSet");

                    b.Navigation("ArrowSetTraining_ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.Navigation("ArcherInCompetitions");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.Navigation("ArrowSetIndoor");

                    b.Navigation("ArrowSetOutdoor");

                    b.Navigation("ArrowSetTraining");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Bow", b =>
                {
                    b.Navigation("CompoundBow");

                    b.Navigation("OlympicBow");

                    b.Navigation("People");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Competition", b =>
                {
                    b.Navigation("ArcherInCompetitions");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.Navigation("Archer");

                    b.Navigation("ArrowSets");

                    b.Navigation("Coach");

                    b.Navigation("President");
                });
#pragma warning restore 612, 618
        }
    }
}
