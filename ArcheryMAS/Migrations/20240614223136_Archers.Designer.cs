// <auto-generated />
using System;
using ArcheryMAS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArcheryMAS.Migrations
{
    [DbContext(typeof(ArcheryDbContext))]
    [Migration("20240614223136_Archers")]
    partial class Archers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("LeaveReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Archer");

                    b.HasData(
                        new
                        {
                            Person_PESEL = "13587117771",
                            Rank = "Senior"
                        },
                        new
                        {
                            Person_PESEL = "10426673524",
                            Rank = "Senior"
                        },
                        new
                        {
                            Person_PESEL = "92616833959",
                            Rank = "Senior"
                        },
                        new
                        {
                            Person_PESEL = "05214380164",
                            Rank = "Junior"
                        },
                        new
                        {
                            Person_PESEL = "01270081646",
                            Rank = "Cadet"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArcherInCompetition", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Competition_Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlaceInCompetition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Archer_Person_PESEL", "Competition_Name");

                    b.HasIndex("Competition_Name");

                    b.ToTable("ArcherInCompetition");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ArrowLength")
                        .HasColumnType("double");

                    b.Property<int>("ArrowQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Person_PESEL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Person_PESEL");

                    b.ToTable("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetIndoor");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetOutdoor");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetTraining");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Bow", b =>
                {
                    b.Property<string>("NickName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Force")
                        .HasColumnType("double");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NickName");

                    b.ToTable("Bow");

                    b.HasData(
                        new
                        {
                            NickName = "Kyan",
                            Force = 43.0,
                            Manufacturer = "PSE"
                        },
                        new
                        {
                            NickName = "Nash",
                            Force = 72.0,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "The Balloon Buster",
                            Force = 17.0,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Moby",
                            Force = 94.0,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Moe",
                            Force = 33.0,
                            Manufacturer = "Bear"
                        },
                        new
                        {
                            NickName = "Nino",
                            Force = 69.0,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Mack",
                            Force = 69.0,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Barron",
                            Force = 25.0,
                            Manufacturer = "PSE"
                        },
                        new
                        {
                            NickName = "Neo",
                            Force = 94.0,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Niko",
                            Force = 62.0,
                            Manufacturer = "Mathews"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bonus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Competition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("CancelingReason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeStart")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.CompoundBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("TEXT");

                    b.Property<double>("OpticalZoom")
                        .HasColumnType("double");

                    b.HasKey("Bow_NickName");

                    b.ToTable("CompoundBow");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.OlympicBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("TEXT");

                    b.Property<int>("DaysWithoutService")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NummberOfStabilizers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Bow_NickName");

                    b.ToTable("OlympicBow");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.Property<string>("PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bow_NickName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PESEL");

                    b.HasIndex("Bow_NickName");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PESEL = "10426673524",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Mack",
                            DateOfBirth = new DateTime(2007, 4, 23, 5, 41, 9, 91, DateTimeKind.Local).AddTicks(2968),
                            Names = "Nazary, Mojżesz",
                            Surname = "Pluta"
                        },
                        new
                        {
                            PESEL = "05214380164",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Niko",
                            DateOfBirth = new DateTime(2005, 1, 23, 22, 7, 22, 241, DateTimeKind.Local).AddTicks(2974),
                            Names = "Eudoksja, Bertram",
                            Surname = "Wróblewski"
                        },
                        new
                        {
                            PESEL = "13587117771",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Moe",
                            DateOfBirth = new DateTime(2014, 12, 23, 18, 44, 14, 233, DateTimeKind.Local).AddTicks(5255),
                            Names = "Nikola, Zygmunt",
                            Surname = "Jezierski"
                        },
                        new
                        {
                            PESEL = "92616833959",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Barron",
                            DateOfBirth = new DateTime(2009, 5, 3, 21, 11, 53, 619, DateTimeKind.Local).AddTicks(8527),
                            Names = "Damian, Tomasz",
                            Surname = "Kuciński"
                        },
                        new
                        {
                            PESEL = "01270081646",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Kyan",
                            DateOfBirth = new DateTime(2018, 2, 13, 14, 30, 36, 645, DateTimeKind.Local).AddTicks(9544),
                            Names = "Jeremiasz, Barbara",
                            Surname = "Podgórski"
                        },
                        new
                        {
                            PESEL = "93920951762",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Nino",
                            DateOfBirth = new DateTime(2023, 7, 22, 1, 4, 54, 7, DateTimeKind.Local).AddTicks(4101),
                            Names = "Helena, Leon",
                            Surname = "Kurek"
                        },
                        new
                        {
                            PESEL = "76258169695",
                            ArrowSet_ID = 0,
                            Bow_NickName = "The Balloon Buster",
                            DateOfBirth = new DateTime(2017, 7, 8, 18, 17, 18, 602, DateTimeKind.Local).AddTicks(8547),
                            Names = "Rufina, Cecylia",
                            Surname = "Grześkowiak"
                        },
                        new
                        {
                            PESEL = "00896811344",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Neo",
                            DateOfBirth = new DateTime(2024, 3, 7, 17, 47, 33, 878, DateTimeKind.Local).AddTicks(1844),
                            Names = "Zachary, Melania",
                            Surname = "Łukasiewicz"
                        },
                        new
                        {
                            PESEL = "93805491645",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Moby",
                            DateOfBirth = new DateTime(2020, 2, 16, 1, 35, 16, 933, DateTimeKind.Local).AddTicks(1513),
                            Names = "Agrypina, Ariadna",
                            Surname = "Marciniak"
                        },
                        new
                        {
                            PESEL = "25332412701",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Nash",
                            DateOfBirth = new DateTime(2006, 10, 18, 6, 22, 59, 347, DateTimeKind.Local).AddTicks(8036),
                            Names = "Zuzanna, Hanna",
                            Surname = "Szymczak"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.President", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("DegreeOfEducation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("President");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Training", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Coach_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeTrainingEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeTrainingStart")
                        .HasColumnType("datetime");

                    b.HasKey("Archer_Person_PESEL", "Coach_Person_PESEL");

                    b.HasIndex("Coach_Person_PESEL");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.UniversalSet", b =>
                {
                    b.Property<int>("ArrowSetIndoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetOutdoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetTraining_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("ArrowSetIndoor_ArrowSet_ID", "ArrowSetOutdoor_ArrowSet_ID", "ArrowSetTraining_ArrowSet_ID");

                    b.HasIndex("ArrowSetOutdoor_ArrowSet_ID");

                    b.HasIndex("ArrowSetTraining_ArrowSet_ID");

                    b.ToTable("UniversalSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("Archer")
                        .HasForeignKey("ArcheryMAS.Entities.Archer", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArcherInCompetition", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.Competition", "Competition_NameNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Competition_Name")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Competition_NameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithMany("ArrowSets")
                        .HasForeignKey("Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetIndoor")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetIndoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetOutdoor")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetOutdoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetTraining")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetTraining", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("Coach")
                        .HasForeignKey("ArcheryMAS.Entities.Coach", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.CompoundBow", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithOne("CompoundBow")
                        .HasForeignKey("ArcheryMAS.Entities.CompoundBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.OlympicBow", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithOne("OlympicBow")
                        .HasForeignKey("ArcheryMAS.Entities.OlympicBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithMany("People")
                        .HasForeignKey("Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.President", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("President")
                        .HasForeignKey("ArcheryMAS.Entities.President", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Training", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.Coach", "Coach_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Coach_Person_PESEL")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Coach_Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.UniversalSet", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSetIndoor", "ArrowSetIndoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetIndoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.ArrowSetOutdoor", "ArrowSetOutdoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetOutdoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.ArrowSetTraining", "ArrowSetTraining_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetTraining_ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSetIndoor_ArrowSet");

                    b.Navigation("ArrowSetOutdoor_ArrowSet");

                    b.Navigation("ArrowSetTraining_ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.Navigation("ArcherInCompetitions");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.Navigation("ArrowSetIndoor");

                    b.Navigation("ArrowSetOutdoor");

                    b.Navigation("ArrowSetTraining");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Bow", b =>
                {
                    b.Navigation("CompoundBow");

                    b.Navigation("OlympicBow");

                    b.Navigation("People");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Competition", b =>
                {
                    b.Navigation("ArcherInCompetitions");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.Navigation("Archer");

                    b.Navigation("ArrowSets");

                    b.Navigation("Coach");

                    b.Navigation("President");
                });
#pragma warning restore 612, 618
        }
    }
}
