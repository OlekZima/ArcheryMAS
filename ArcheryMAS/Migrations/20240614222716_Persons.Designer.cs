// <auto-generated />
using System;
using ArcheryMAS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArcheryMAS.Migrations
{
    [DbContext(typeof(ArcheryDbContext))]
    [Migration("20240614222716_Persons")]
    partial class Persons
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("LeaveReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Archer");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArcherInCompetition", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Competition_Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlaceInCompetition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Archer_Person_PESEL", "Competition_Name");

                    b.HasIndex("Competition_Name");

                    b.ToTable("ArcherInCompetition");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ArrowLength")
                        .HasColumnType("double");

                    b.Property<int>("ArrowQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Person_PESEL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Person_PESEL");

                    b.ToTable("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetIndoor");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetOutdoor");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetTraining");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Bow", b =>
                {
                    b.Property<string>("NickName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Force")
                        .HasColumnType("double");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NickName");

                    b.ToTable("Bow");

                    b.HasData(
                        new
                        {
                            NickName = "Jinx",
                            Force = 91.0,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Kane",
                            Force = 15.0,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Jax",
                            Force = 41.0,
                            Manufacturer = "Mathews"
                        },
                        new
                        {
                            NickName = "Knox",
                            Force = 64.0,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Milo",
                            Force = 42.0,
                            Manufacturer = "PSE"
                        },
                        new
                        {
                            NickName = "Kruz",
                            Force = 90.0,
                            Manufacturer = "Bear"
                        },
                        new
                        {
                            NickName = "Mako",
                            Force = 40.0,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Kyan",
                            Force = 77.0,
                            Manufacturer = "PSE"
                        },
                        new
                        {
                            NickName = "Kota",
                            Force = 68.0,
                            Manufacturer = "Bear"
                        },
                        new
                        {
                            NickName = "Neo",
                            Force = 59.0,
                            Manufacturer = "PSE"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bonus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Competition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("CancelingReason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeStart")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.CompoundBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("TEXT");

                    b.Property<double>("OpticalZoom")
                        .HasColumnType("double");

                    b.HasKey("Bow_NickName");

                    b.ToTable("CompoundBow");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.OlympicBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("TEXT");

                    b.Property<int>("DaysWithoutService")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NummberOfStabilizers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Bow_NickName");

                    b.ToTable("OlympicBow");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.Property<string>("PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bow_NickName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PESEL");

                    b.HasIndex("Bow_NickName");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PESEL = "12261960704",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Kruz",
                            DateOfBirth = new DateTime(2019, 5, 14, 21, 40, 8, 688, DateTimeKind.Local).AddTicks(8924),
                            Names = "Korneli, Aurora",
                            Surname = "Miller"
                        },
                        new
                        {
                            PESEL = "07093601852",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Kota",
                            DateOfBirth = new DateTime(2016, 1, 22, 19, 53, 17, 507, DateTimeKind.Local).AddTicks(6255),
                            Names = "Antoni, Lilia",
                            Surname = "Trzciński"
                        },
                        new
                        {
                            PESEL = "32853957397",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Milo",
                            DateOfBirth = new DateTime(2018, 5, 14, 16, 31, 21, 413, DateTimeKind.Local).AddTicks(7872),
                            Names = "Grzegorz, Cecylia",
                            Surname = "Woś"
                        },
                        new
                        {
                            PESEL = "69614421316",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Neo",
                            DateOfBirth = new DateTime(2012, 12, 2, 2, 34, 38, 903, DateTimeKind.Local).AddTicks(3792),
                            Names = "Albert, Łazarz",
                            Surname = "Świerczyński"
                        },
                        new
                        {
                            PESEL = "84229279756",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Knox",
                            DateOfBirth = new DateTime(2019, 3, 31, 21, 51, 5, 348, DateTimeKind.Local).AddTicks(5868),
                            Names = "Walery, Ireneusz",
                            Surname = "Komorowski"
                        },
                        new
                        {
                            PESEL = "66198006684",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Jax",
                            DateOfBirth = new DateTime(2006, 8, 11, 22, 37, 34, 671, DateTimeKind.Local).AddTicks(6194),
                            Names = "Marek, Bruno",
                            Surname = "Herman"
                        },
                        new
                        {
                            PESEL = "82226925492",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Kane",
                            DateOfBirth = new DateTime(2012, 5, 20, 17, 56, 23, 834, DateTimeKind.Local).AddTicks(4809),
                            Names = "Edmund, Dariusz",
                            Surname = "Siedlecki"
                        },
                        new
                        {
                            PESEL = "06512252497",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Kyan",
                            DateOfBirth = new DateTime(2008, 7, 19, 18, 25, 23, 37, DateTimeKind.Local).AddTicks(7497),
                            Names = "Bertrand, Henryka",
                            Surname = "Antczak"
                        },
                        new
                        {
                            PESEL = "77553504020",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Jinx",
                            DateOfBirth = new DateTime(2018, 9, 21, 3, 4, 42, 699, DateTimeKind.Local).AddTicks(8995),
                            Names = "Tacjana, Korneliusz",
                            Surname = "Adamowicz"
                        },
                        new
                        {
                            PESEL = "35550755289",
                            ArrowSet_ID = 0,
                            Bow_NickName = "Mako",
                            DateOfBirth = new DateTime(2013, 12, 6, 14, 10, 13, 680, DateTimeKind.Local).AddTicks(2166),
                            Names = "Orestes, Jeremiasz",
                            Surname = "Bielski"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Entities.President", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("DegreeOfEducation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("President");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Training", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Coach_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeTrainingEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeTrainingStart")
                        .HasColumnType("datetime");

                    b.HasKey("Archer_Person_PESEL", "Coach_Person_PESEL");

                    b.HasIndex("Coach_Person_PESEL");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.UniversalSet", b =>
                {
                    b.Property<int>("ArrowSetIndoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetOutdoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetTraining_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("ArrowSetIndoor_ArrowSet_ID", "ArrowSetOutdoor_ArrowSet_ID", "ArrowSetTraining_ArrowSet_ID");

                    b.HasIndex("ArrowSetOutdoor_ArrowSet_ID");

                    b.HasIndex("ArrowSetTraining_ArrowSet_ID");

                    b.ToTable("UniversalSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("Archer")
                        .HasForeignKey("ArcheryMAS.Entities.Archer", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArcherInCompetition", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.Competition", "Competition_NameNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Competition_Name")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Competition_NameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithMany("ArrowSets")
                        .HasForeignKey("Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetIndoor")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetIndoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetOutdoor")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetOutdoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetTraining")
                        .HasForeignKey("ArcheryMAS.Entities.ArrowSetTraining", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("Coach")
                        .HasForeignKey("ArcheryMAS.Entities.Coach", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.CompoundBow", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithOne("CompoundBow")
                        .HasForeignKey("ArcheryMAS.Entities.CompoundBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.OlympicBow", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithOne("OlympicBow")
                        .HasForeignKey("ArcheryMAS.Entities.OlympicBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Bow", "Bow_NickNameNavigation")
                        .WithMany("People")
                        .HasForeignKey("Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.President", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Person", "Person_PESELNavigation")
                        .WithOne("President")
                        .HasForeignKey("ArcheryMAS.Entities.President", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Training", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.Coach", "Coach_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Coach_Person_PESEL")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Coach_Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.UniversalSet", b =>
                {
                    b.HasOne("ArcheryMAS.Entities.ArrowSetIndoor", "ArrowSetIndoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetIndoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.ArrowSetOutdoor", "ArrowSetOutdoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetOutdoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Entities.ArrowSetTraining", "ArrowSetTraining_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetTraining_ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSetIndoor_ArrowSet");

                    b.Navigation("ArrowSetOutdoor_ArrowSet");

                    b.Navigation("ArrowSetTraining_ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Archer", b =>
                {
                    b.Navigation("ArcherInCompetitions");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSet", b =>
                {
                    b.Navigation("ArrowSetIndoor");

                    b.Navigation("ArrowSetOutdoor");

                    b.Navigation("ArrowSetTraining");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetIndoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetOutdoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.ArrowSetTraining", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Bow", b =>
                {
                    b.Navigation("CompoundBow");

                    b.Navigation("OlympicBow");

                    b.Navigation("People");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Coach", b =>
                {
                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Competition", b =>
                {
                    b.Navigation("ArcherInCompetitions");
                });

            modelBuilder.Entity("ArcheryMAS.Entities.Person", b =>
                {
                    b.Navigation("Archer");

                    b.Navigation("ArrowSets");

                    b.Navigation("Coach");

                    b.Navigation("President");
                });
#pragma warning restore 612, 618
        }
    }
}
