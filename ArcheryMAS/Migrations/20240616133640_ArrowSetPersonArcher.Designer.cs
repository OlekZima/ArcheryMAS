// <auto-generated />
using System;
using ArcheryMAS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArcheryMAS.Migrations
{
    [DbContext(typeof(ArcheryDbContext))]
    [Migration("20240616133640_ArrowSetPersonArcher")]
    partial class ArrowSetPersonArcher
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ArcheryMAS.Migrations.Archer", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("LeaveReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Archer");

                    b.HasData(
                        new
                        {
                            Person_PESEL = "81434779931",
                            Rank = "Cadet"
                        },
                        new
                        {
                            Person_PESEL = "87049174607",
                            Rank = "Senior"
                        },
                        new
                        {
                            Person_PESEL = "97240929374",
                            Rank = "Junior"
                        },
                        new
                        {
                            Person_PESEL = "34565394197",
                            Rank = "Cadet"
                        },
                        new
                        {
                            Person_PESEL = "46571807247",
                            Rank = "Cadet"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArcherInCompetition", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Competition_Name")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PlaceInCompetition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Archer_Person_PESEL", "Competition_Name");

                    b.HasIndex("Competition_Name");

                    b.ToTable("ArcherInCompetition");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSet", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ArrowLength")
                        .HasColumnType("double");

                    b.Property<int>("ArrowQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ArrowSet");

                    b.HasData(
                        new
                        {
                            ID = 45,
                            ArrowLength = 21.626989992822278,
                            ArrowQuantity = 7,
                            MinQuantity = 0,
                            State = "New"
                        },
                        new
                        {
                            ID = 46,
                            ArrowLength = 27.01799470280951,
                            ArrowQuantity = 11,
                            MinQuantity = 0,
                            State = "New"
                        },
                        new
                        {
                            ID = 47,
                            ArrowLength = 35.049556551780029,
                            ArrowQuantity = 12,
                            MinQuantity = 0,
                            State = "Used"
                        },
                        new
                        {
                            ID = 48,
                            ArrowLength = 21.196336160921078,
                            ArrowQuantity = 11,
                            MinQuantity = 0,
                            State = "Broken"
                        },
                        new
                        {
                            ID = 49,
                            ArrowLength = 25.016616769294309,
                            ArrowQuantity = 6,
                            MinQuantity = 0,
                            State = "Used"
                        },
                        new
                        {
                            ID = 50,
                            ArrowLength = 27.230507344967869,
                            ArrowQuantity = 6,
                            MinQuantity = 0,
                            State = "New"
                        },
                        new
                        {
                            ID = 51,
                            ArrowLength = 24.740968673315816,
                            ArrowQuantity = 7,
                            MinQuantity = 0,
                            State = "Broken"
                        },
                        new
                        {
                            ID = 52,
                            ArrowLength = 24.131572812209161,
                            ArrowQuantity = 7,
                            MinQuantity = 0,
                            State = "Broken"
                        },
                        new
                        {
                            ID = 53,
                            ArrowLength = 33.273050573475942,
                            ArrowQuantity = 11,
                            MinQuantity = 0,
                            State = "Used"
                        },
                        new
                        {
                            ID = 54,
                            ArrowLength = 28.569796632465682,
                            ArrowQuantity = 11,
                            MinQuantity = 0,
                            State = "Used"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetIndoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.Property<double>("MaxDiameter")
                        .HasColumnType("double");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetIndoor");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetOutdoor", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("double");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("MaxDiameter")
                        .HasColumnType("double");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetOutdoor");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetTraining", b =>
                {
                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArrowSet_ID");

                    b.ToTable("ArrowSetTraining");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Bow", b =>
                {
                    b.Property<string>("NickName")
                        .HasColumnType("varchar(30)");

                    b.Property<double>("Force")
                        .HasColumnType("double");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NickName");

                    b.ToTable("Bow");

                    b.HasData(
                        new
                        {
                            NickName = "Niko",
                            Force = 58.165808858714179,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Nile",
                            Force = 62.830509980330355,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Bam",
                            Force = 62.187577921779372,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Barron",
                            Force = 56.390257621081673,
                            Manufacturer = "Mathews"
                        },
                        new
                        {
                            NickName = "Jax",
                            Force = 14.875844532830811,
                            Manufacturer = "Hoyt"
                        },
                        new
                        {
                            NickName = "Moby",
                            Force = 59.324385575773647,
                            Manufacturer = "Bear"
                        },
                        new
                        {
                            NickName = "Huss",
                            Force = 73.737640423218053,
                            Manufacturer = "Polaris"
                        },
                        new
                        {
                            NickName = "Nash",
                            Force = 15.954864261802102,
                            Manufacturer = "PSE"
                        },
                        new
                        {
                            NickName = "Nino",
                            Force = 14.634206157050144,
                            Manufacturer = "Easton"
                        },
                        new
                        {
                            NickName = "Knox",
                            Force = 24.058152986072969,
                            Manufacturer = "PSE"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Coach", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bonus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinSalary")
                        .HasColumnType("INTEGER");

                    b.HasKey("Person_PESEL");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Competition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CancelingReason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeStart")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.CompoundBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("varchar(30)");

                    b.Property<double>("OpticalZoom")
                        .HasColumnType("double");

                    b.HasKey("Bow_NickName");

                    b.ToTable("CompoundBow");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.OlympicBow", b =>
                {
                    b.Property<string>("Bow_NickName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("DaysWithoutService")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxDaysWithoutService")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NummberOfStabilizers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Bow_NickName");

                    b.ToTable("OlympicBow");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Person", b =>
                {
                    b.Property<string>("PESEL")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bow_NickName")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PESEL");

                    b.HasIndex("ArrowSet_ID");

                    b.HasIndex("Bow_NickName");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PESEL = "87049174607",
                            ArrowSet_ID = 53,
                            Bow_NickName = "Jax",
                            DateOfBirth = new DateTime(1966, 3, 11, 10, 17, 24, 829, DateTimeKind.Local).AddTicks(213),
                            Names = "Roman, Roman",
                            Surname = "Przybysz"
                        },
                        new
                        {
                            PESEL = "32745399630",
                            ArrowSet_ID = 51,
                            Bow_NickName = "Moby",
                            DateOfBirth = new DateTime(1977, 1, 7, 3, 0, 52, 288, DateTimeKind.Local).AddTicks(1623),
                            Names = "Mateusz, Mateusz",
                            Surname = "Staszewski"
                        },
                        new
                        {
                            PESEL = "37977504032",
                            ArrowSet_ID = 54,
                            Bow_NickName = "Huss",
                            DateOfBirth = new DateTime(1999, 7, 14, 12, 20, 30, 525, DateTimeKind.Local).AddTicks(268),
                            Names = "Nadzieja, Nadzieja",
                            Surname = "Kubiak"
                        },
                        new
                        {
                            PESEL = "46571807247",
                            ArrowSet_ID = 45,
                            Bow_NickName = "Knox",
                            DateOfBirth = new DateTime(1967, 5, 5, 21, 55, 58, 479, DateTimeKind.Local).AddTicks(5598),
                            Names = "Katarzyna, Katarzyna",
                            Surname = "Mazurkiewicz"
                        },
                        new
                        {
                            PESEL = "97240929374",
                            ArrowSet_ID = 52,
                            Bow_NickName = "Nino",
                            DateOfBirth = new DateTime(1955, 2, 23, 17, 55, 46, 262, DateTimeKind.Local).AddTicks(9772),
                            Names = "Józef, Józef",
                            Surname = "Dróżdż"
                        },
                        new
                        {
                            PESEL = "36012710454",
                            ArrowSet_ID = 47,
                            Bow_NickName = "Nile",
                            DateOfBirth = new DateTime(1963, 4, 7, 8, 19, 24, 955, DateTimeKind.Local).AddTicks(5339),
                            Names = "Eugeniusz, Eugeniusz",
                            Surname = "Duszyński"
                        },
                        new
                        {
                            PESEL = "81434779931",
                            ArrowSet_ID = 48,
                            Bow_NickName = "Barron",
                            DateOfBirth = new DateTime(1981, 5, 4, 2, 3, 10, 363, DateTimeKind.Local).AddTicks(2235),
                            Names = "Ludwika, Ludwika",
                            Surname = "Szymczyk"
                        },
                        new
                        {
                            PESEL = "40693627556",
                            ArrowSet_ID = 50,
                            Bow_NickName = "Niko",
                            DateOfBirth = new DateTime(1969, 2, 12, 7, 41, 55, 477, DateTimeKind.Local).AddTicks(4162),
                            Names = "Innocenty, Innocenty",
                            Surname = "Ziółkowski"
                        },
                        new
                        {
                            PESEL = "34565394197",
                            ArrowSet_ID = 49,
                            Bow_NickName = "Nash",
                            DateOfBirth = new DateTime(1962, 12, 22, 18, 9, 29, 423, DateTimeKind.Local).AddTicks(5379),
                            Names = "Aleksandra, Aleksandra",
                            Surname = "Łuczak"
                        },
                        new
                        {
                            PESEL = "68827910906",
                            ArrowSet_ID = 46,
                            Bow_NickName = "Bam",
                            DateOfBirth = new DateTime(1985, 10, 17, 7, 43, 26, 800, DateTimeKind.Local).AddTicks(3039),
                            Names = "Gabriel, Gabriel",
                            Surname = "Muszyński"
                        });
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.President", b =>
                {
                    b.Property<string>("Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("DegreeOfEducation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_PESEL");

                    b.ToTable("President");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Training", b =>
                {
                    b.Property<string>("Archer_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Coach_Person_PESEL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAndTimeTrainingEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateAndTimeTrainingStart")
                        .HasColumnType("datetime");

                    b.HasKey("Archer_Person_PESEL", "Coach_Person_PESEL");

                    b.HasIndex("Coach_Person_PESEL");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.UniversalSet", b =>
                {
                    b.Property<int>("ArrowSetIndoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetOutdoor_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrowSetTraining_ArrowSet_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("ArrowSetIndoor_ArrowSet_ID", "ArrowSetOutdoor_ArrowSet_ID", "ArrowSetTraining_ArrowSet_ID");

                    b.HasIndex("ArrowSetOutdoor_ArrowSet_ID");

                    b.HasIndex("ArrowSetTraining_ArrowSet_ID");

                    b.ToTable("UniversalSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Archer", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Person", "Person_PESELNavigation")
                        .WithOne("Archer")
                        .HasForeignKey("ArcheryMAS.Migrations.Archer", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArcherInCompetition", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.Competition", "Competition_NameNavigation")
                        .WithMany("ArcherInCompetitions")
                        .HasForeignKey("Competition_Name")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Competition_NameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetIndoor", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetIndoor")
                        .HasForeignKey("ArcheryMAS.Migrations.ArrowSetIndoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetOutdoor", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetOutdoor")
                        .HasForeignKey("ArcheryMAS.Migrations.ArrowSetOutdoor", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetTraining", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSet", "ArrowSet")
                        .WithOne("ArrowSetTraining")
                        .HasForeignKey("ArcheryMAS.Migrations.ArrowSetTraining", "ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Coach", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Person", "Person_PESELNavigation")
                        .WithOne("Coach")
                        .HasForeignKey("ArcheryMAS.Migrations.Coach", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.CompoundBow", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Bow", "Bow_NickNameNavigation")
                        .WithOne("CompoundBow")
                        .HasForeignKey("ArcheryMAS.Migrations.CompoundBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.OlympicBow", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Bow", "Bow_NickNameNavigation")
                        .WithOne("OlympicBow")
                        .HasForeignKey("ArcheryMAS.Migrations.OlympicBow", "Bow_NickName")
                        .IsRequired();

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Person", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSet", "ArrowSet")
                        .WithMany("People")
                        .HasForeignKey("ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.Bow", "Bow_NickNameNavigation")
                        .WithMany("People")
                        .HasForeignKey("Bow_NickName")
                        .IsRequired();

                    b.Navigation("ArrowSet");

                    b.Navigation("Bow_NickNameNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.President", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Person", "Person_PESELNavigation")
                        .WithOne("President")
                        .HasForeignKey("ArcheryMAS.Migrations.President", "Person_PESEL")
                        .IsRequired();

                    b.Navigation("Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Training", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.Archer", "Archer_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Archer_Person_PESEL")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.Coach", "Coach_Person_PESELNavigation")
                        .WithMany("Training")
                        .HasForeignKey("Coach_Person_PESEL")
                        .IsRequired();

                    b.Navigation("Archer_Person_PESELNavigation");

                    b.Navigation("Coach_Person_PESELNavigation");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.UniversalSet", b =>
                {
                    b.HasOne("ArcheryMAS.Migrations.ArrowSetIndoor", "ArrowSetIndoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetIndoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.ArrowSetOutdoor", "ArrowSetOutdoor_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetOutdoor_ArrowSet_ID")
                        .IsRequired();

                    b.HasOne("ArcheryMAS.Migrations.ArrowSetTraining", "ArrowSetTraining_ArrowSet")
                        .WithMany("UniversalSets")
                        .HasForeignKey("ArrowSetTraining_ArrowSet_ID")
                        .IsRequired();

                    b.Navigation("ArrowSetIndoor_ArrowSet");

                    b.Navigation("ArrowSetOutdoor_ArrowSet");

                    b.Navigation("ArrowSetTraining_ArrowSet");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Archer", b =>
                {
                    b.Navigation("ArcherInCompetitions");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSet", b =>
                {
                    b.Navigation("ArrowSetIndoor");

                    b.Navigation("ArrowSetOutdoor");

                    b.Navigation("ArrowSetTraining");

                    b.Navigation("People");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetIndoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetOutdoor", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.ArrowSetTraining", b =>
                {
                    b.Navigation("UniversalSets");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Bow", b =>
                {
                    b.Navigation("CompoundBow");

                    b.Navigation("OlympicBow");

                    b.Navigation("People");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Coach", b =>
                {
                    b.Navigation("Training");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Competition", b =>
                {
                    b.Navigation("ArcherInCompetitions");
                });

            modelBuilder.Entity("ArcheryMAS.Migrations.Person", b =>
                {
                    b.Navigation("Archer");

                    b.Navigation("Coach");

                    b.Navigation("President");
                });
#pragma warning restore 612, 618
        }
    }
}
